{"version":3,"sources":["components/pages/mint.js","state/hooks/useInsuranceNftContractInvoke.js","state/hooks/useNftContract.js","state/hooks/useDAOMintContract.js","state/contexts/AccountContext.js","components/components/Footer.js","state/hooks/useGetTokenFromAddress.js","components/menu/scrollToTop.js","components/menu/header.js","components/components/Particle.js","components/components/SliderMainParticle.js","components/components/FeatureBox.js","components/pages/Landing.js","store/selectors/index.js","core/axios.js","store/actions/index.js","store/actions/thunks/nfts.js","components/components/NewNftCard.js","components/components/NftCard.js","store/utils.js","components/components/ColumnNewRedux.js","state/hooks/useArgentX.js","components/pages/collection.js","components/components/NewDaoNftCard.js","components/components/ColumnNewThreeColRedux.js","components/pages/holdings.js","state/ProviderComposer.js","state/PebbleContextProvider.js","components/App.js","store/reducers/nfts.js","store/reducers/hotCollections.js","store/reducers/authorList.js","store/reducers/index.js","store/index.js","reportWebVitals.js","index.js"],"names":["require","Mint","useState","files","setFiles","fileURL","setFileURL","start","setStart","dateTime","setDateTime","setCurrentImageURI","amountRuns","setAmountRuns","penaltyLevels","setPenaltyLevels","accLevels","setAccLevels","costLevels","setCostLevels","DAOContract","deviceIMEI","setDeviceIMEI","score","setScore","rating","setRating","setAverage","setPendingTokenURI","hexedTokenUri","setHexedTokenUri","setPendingTimeStamp","setR","setS","setV","ratingBreaks","setRatingBreaks","ratingLabels","setRatingLabels","daoJoin","setDAOJoin","daoUpdate","setDAOUpdate","daoShow","setDAOShow","daoRating","setDAORating","daoLevel","setDAOLevel","pendingMint","setPendingMint","useContext","AccountContext","globalAccount","setGlobalAccount","globalActive","setGlobalActive","globalChainId","setGlobalChainId","useStarknet","account","library","useNftContract","nftCon","contract","loading","error","useInsuranceDAOMintContract","useInsuranceNftContract","invokeInsuranceNftMint","invokeSetTokenUri","useStarknetCall","method","args","getLastTokenId","data","low","toString","high","tokenURI","uriToHex","Buffer","useEffect","loadLabels","a","fetch","labelResponse","json","labelBody","results","labels","costs","ratings","penLevels","loadUserNFTData","response","body","initResponse","initBody","yearAgo","Math","round","Date","now","dateTimeUnixConverter","Number","IMEI","catch","console","loadBlockchainData","InsuranceNftAbi","lastMetaData","imageMap","time","unixTime","date","getFullYear","getMonth","getDate","getHours","getMinutes","startMint","window","alert","length","file","includes","name","slice","toLowerCase","parse","formData","FormData","append","axios","post","headers","mintImageRes","imageURL","mintRes","mintBody","reason","average","lastTimeStamp","r","s","v","finishMint","joinUpdateDao","lastMetaDataBody","level","tokenId","timeStamp","value","methods","getCosts","call","addToDao","send","from","on","receipt","className","style","paddingBottom","id","action","map","x","index","type","onChange","e","newFiles","target","log","filesArr","Array","prototype","URL","createObjectURL","onClick","marginLeft","src","alt","paddingTop","striped","bordered","hover","size","backgroundColor","border","val","i","scoreText","useStarknetInvoke","mintTokens","reset","invoke","invokeSetTokenURI","tokenUri","uri","useContract","abi","address","InsuranceDAOAbi","createContext","AccountProvider","children","props","Provider","Footer","to","placeholder","open","ScrollToTop","state","is_visible","scrollComponent","this","document","addEventListener","toggleVisibility","pageYOffset","setState","scrollTo","top","behavior","scrollToTop","Component","setDefaultBreakpoints","xs","l","xl","NavLink","getProps","isCurrent","Header","connect","React","setOpenMenu","setOpenMenu1","setOpenMenu2","setOpenMenu3","closeMenu","useOnclickOutside","showmenu","btn_icon","header","getElementById","totop","sticky","offsetTop","scrollCallBack","classList","add","remove","removeEventListener","down","color","InjectedConnector","Particle","particlesInit","bind","particlesLoaded","main","container","init","loaded","options","background","fpsLimit","interactivity","detectsOn","events","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","push","quantity","repulse","particles","links","width","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","detectRetina","fadeInUp","keyframes","sliderMainParticle","fontSize","fontWeight","delay","triggerOnce","padding","borderRadius","cursor","featureBox","GlobalStyles","createGlobalStyle","Landing","backgroundImage","SliderMainParticle","FeatureBox","nftBreakdownState","NFT","nftBreakdown","createSelector","nfts","filter","nft","deadline","Axios","create","Canceler","CancelToken","source","getNftBreakdown","asyncAction","getNftShowcase","getNftDetail","getHotCollections","getAuthorList","getAuthorRanking","clearNfts","fetchNftsBreakdown","dispatch","getState","actions","request","cancel","get","cancelToken","token","params","success","failure","Outer","styled","div","NewNftCard","height","onImgLoad","metaData","onLoad","image","href","attributes","initEntityState","initialValue","loadFailed","canceler","entityLoadingStarted","entityLoadingSucceeded","entityLoadingFailed","ColumnNewRedux","nftList","metaDataList","useDispatch","nftsState","useSelector","selectors","setHeight","img","offsetHeight","useArgentX","connected","setConnected","connectToArgentX","Collection","setNftList","setMetaDataList","argentX","tempMetaData","metaDataBody","description","NewDaoNftCard","member","ColumnNewThreeColRedux","memberList","Holdings","setMemberList","members","ProviderComposer","contexts","reduceRight","kids","parent","cloneElement","PebbleContextProvider","ScrollTop","location","PosedRouter","key","App","path","exact","defaultState","nftDetail","nftShowcase","states","getType","payload","hotCollections","authorList","authorRanking","rootReducer","combineReducers","nftReducer","hotCollection","hoteCollectionsReducer","authors","authorListReducer","reducers","store","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getLibrary","provider","Web3"],"mappings":"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","file":"static/js/main.97228cea.chunk.js","sourcesContent":["import InsuranceNFT from '../../abis/InsuranceNFT.json';\r\nimport Verify from '../../abis/Verify.json';\r\nimport InsuranceDAO from '../../abis/InsuranceDAO.json';\r\nimport React, { useState, useContext, useEffect, useMemo } from \"react\";\r\nimport Footer from '../components/Footer';\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { AccountContext } from '../../state/contexts/AccountContext';\r\nimport { useInsuranceNftContract } from '../../state/hooks/useInsuranceNftContractInvoke';\r\nimport { useNftContract } from '../../state/hooks/useNftContract';\r\nimport { useInsuranceDAOMintContract } from '../../state/hooks/useDAOMintContract';\r\nimport { useGetTokenFromAddress } from '../../state/hooks/useGetTokenFromAddress'\r\nimport axios from 'axios';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { formatEther } from '@ethersproject/units';\r\nimport InsuranceNftAbi from '../../abis/InsuranceNFT.json';\r\n\r\nimport {\r\n  StarknetProvider,\r\n  useContract,\r\n  useStarknetBlock,\r\n  useStarknetCall,\r\n  useStarknetInvoke,\r\n  useStarknetTransactionManager,\r\n  Transaction,\r\n  useStarknet,\r\n  InjectedConnector,\r\n  useMulticall\r\n} from '@starknet-react/core'\r\n\r\nimport { toBN } from 'starknet/dist/utils/number'\r\n\r\nimport { bnToUint256, uint256ToBN } from 'starknet/dist/utils/uint256'\r\n\r\nconst Web3 = require('web3');\r\n\r\nconst Mint = function () {\r\n  const [files, setFiles] = useState([]);\r\n  const [fileURL, setFileURL] = useState(\"\");\r\n  const [start, setStart] = useState(0);\r\n  const [dateTime, setDateTime] = useState(\"\");\r\n  const [currentImageURI, setCurrentImageURI] = useState(\"\");\r\n  const [amountRuns, setAmountRuns] = useState(100);\r\n  const [penaltyLevels, setPenaltyLevels] = useState([]);\r\n  const [accLevels, setAccLevels] = useState([]);\r\n  const [costLevels, setCostLevels] = useState([]);\r\n  const [VerifyContract, setVerifyContract] = useState();\r\n  const [DAOContract, setDAOContract] = useState();\r\n  const [deviceIMEI, setDeviceIMEI] = useState();\r\n  const [score, setScore] = useState(0);\r\n  const [rating, setRating] = useState(\"\");\r\n  const [average, setAverage] = useState(\"\");\r\n  const [pendingTokenURI, setPendingTokenURI] = useState(\"\");\r\n  const [hexedTokenUri, setHexedTokenUri] = useState(\"\");\r\n  const [pendingTimeStamp, setPendingTimeStamp] = useState(0);\r\n  const [r, setR] = useState(\"\");\r\n  const [s, setS] = useState(\"\");\r\n  const [v, setV] = useState(0);\r\n  const [ratingBreaks, setRatingBreaks] = useState([]);\r\n  const [ratingLabels, setRatingLabels] = useState([]);\r\n  const [daoJoin, setDAOJoin] = useState(false);\r\n  const [daoUpdate, setDAOUpdate] = useState(false);\r\n  const [daoShow, setDAOShow] = useState(false);\r\n  const [daoRating, setDAORating] = useState(\"\");\r\n  const [daoLevel, setDAOLevel] = useState(0);\r\n  const [pendingMint, setPendingMint] = useState(false);\r\n\r\n  const [currentTokenId, setCurrentTokenId] = useState('');\r\n\r\n  const { globalAccount, setGlobalAccount, globalActive, setGlobalActive, globalChainId, setGlobalChainId } = useContext(AccountContext);\r\n  const myAddress = '0x03ceac5dd4b48f61d6680d3d16adf504ba3dadff55f4eb2389cadbde9731464d';\r\n  const insuranceNftAddress = '0x022a3539a4e8f029819b74d24d0f88a75750b948359bb50123f195518749167d';\r\n  const { account, library } = useStarknet()\r\n  const { contract : nftCon, loading : nftLoad, error: nftError} = useNftContract()\r\n  const { contract : daoMintCont, loading: daoMintLoad, error : daoMintError} = useInsuranceDAOMintContract();\r\n\r\n\r\n  const { invokeInsuranceNftMint, invokeSetTokenUri } = useInsuranceNftContract(account, nftCon);\r\n\r\n  const { data: getLastTokenId, error: getLastTokenIdError } = useStarknetCall({ nftCon, method: 'getLastTokenId', args: [account] })\r\n  const { data: tokenURI, error: tokenURIError } = useStarknetCall({ nftCon, method: 'tokenURI', args: [[getLastTokenId && getLastTokenId[0].low.toString(), getLastTokenId && getLastTokenId[0].high.toString()]] })\r\n\r\n\r\n  if (getLastTokenId) {\r\n    if (tokenURI && !hexedTokenUri) {\r\n      const uriToHex = tokenURI[0][1] + tokenURI[0][2]\r\n      const hexUri = new Buffer(uriToHex).toString('hex')\r\n      setHexedTokenUri(hexUri)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const loadLabels = async () => {\r\n      const labelResponse = await fetch(`/labels`);\r\n      const labelBody = await labelResponse.json();\r\n      setRatingLabels(labelBody.results.labels);\r\n      setCostLevels(labelBody.results.costs);\r\n      setRatingBreaks(labelBody.results.ratings);\r\n      setAccLevels(labelBody.results.accLevels);\r\n      setPenaltyLevels(labelBody.results.penLevels);\r\n    }\r\n    loadLabels();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loadUserNFTData = async () => {\r\n      if (account) {\r\n        const response = await fetch(`/user-nfts/${account}`);\r\n        const body = await response.json();\r\n        const initResponse = await fetch(`/init-device-check/${account}`);\r\n        const initBody = await initResponse.json();\r\n        const yearAgo = Math.round(Date.now() / 1000) - 12 * 30 * 24 * 3600;\r\n        if (body.start !== 0 && body.start > yearAgo) {\r\n          setStart(body.start);\r\n          setDateTime(dateTimeUnixConverter(Number(body.start) + 60, true));\r\n        }\r\n        else {\r\n          setStart(0);\r\n          setDateTime(dateTimeUnixConverter(Math.round(Date.now() / 1000), true));\r\n        }\r\n        if (initBody.IMEI == \"\") {\r\n          setDeviceIMEI(\"\");\r\n        }\r\n        else {\r\n          setDeviceIMEI(initBody.IMEI);\r\n        }\r\n      } else {\r\n        setStart(0);\r\n        setDateTime(dateTimeUnixConverter(Math.round(Date.now() / 1000), true));\r\n        setDeviceIMEI(\"\");\r\n      }\r\n\r\n      setFiles([]);\r\n      setFileURL(\"\");\r\n      setScore(0);\r\n      setRating(\"\");\r\n      setAverage(\"\");\r\n      setPendingTokenURI(\"\");\r\n      setPendingTimeStamp(0);\r\n      setR(\"\");\r\n      setS(\"\");\r\n      setV(0);\r\n      setPendingMint(false);\r\n    }\r\n\r\n    loadUserNFTData()\r\n      .catch(console.error);\r\n\r\n  }, [account])\r\n\r\n  useEffect(() => {\r\n    const loadBlockchainData = async () => {\r\n      if (InsuranceNftAbi) {\r\n\r\n        let lastTokenURI, lastMetaData, lastMetaDataBody;\r\n        if (hexedTokenUri && false) {\r\n          // lastTokenURI = await NFTContract.methods.tokenURI(ownedNFTs[ownedNFTs.length - 1]).call();\r\n          lastMetaData = await fetch(`https://gateway.pinata.cloud/ipfs/${hexedTokenUri}`);\r\n          lastMetaDataBody = await lastMetaData.json();\r\n\r\n        }\r\n        \r\n      } else {\r\n        \r\n      }\r\n    }\r\n\r\n    loadBlockchainData()\r\n      .catch(console.error);\r\n\r\n  }, [account, library])\r\n\r\n\r\n  function fileLoad(e) {\r\n    var newFiles = e.target.files;\r\n    console.log(newFiles);\r\n    var filesArr = Array.prototype.slice.call(newFiles);\r\n    console.log(filesArr);\r\n    setFiles([...filesArr]);\r\n    setFileURL(URL.createObjectURL(newFiles[0]));\r\n  }\r\n\r\n  const imageMap = {\r\n    \"0x7f5ed1b71b101d046244ba6703a3bae5cfb2a5b34af4a841537f199974406d9\": \"author-1\", \"0x6fb00605dff8c1086aa8cea1307f82279d7df741ce588e775303ac47c1690e8\": \"author-2\",\r\n    \"0x51df3b3b48329cd68512c1079db368685c5e527f3b9655246023d451207fed1\": \"author-3\", \"0x7da3d9da8b703afc89aa2c58ef5139de12a2dfdeca54be9b2e2711a98bb8328\": \"author-4\"\r\n  }\r\n\r\n  function dateTimeUnixConverter(time, unixTime) {\r\n    if (unixTime) {\r\n      //convert to datetime\r\n      var date = new Date(time * 1000);\r\n      return `${date.getFullYear()}-${date.getMonth() < 9 ? `0${date.getMonth() + 1}` : `${date.getMonth() + 1}`}-${date.getDate() < 10 ? `0${date.getDate()}` : `${date.getDate()}`}T${date.getHours() < 10 ? `0${date.getHours()}` : `${date.getHours()}`}:${date.getMinutes() < 10 ? `0${date.getMinutes()}` : `${date.getMinutes()}`}`\r\n    }\r\n  }\r\n\r\n  function displayStart(time) {\r\n    var date = new Date(time * 1000);\r\n    let hours;\r\n    const modifier = (date.getHours < 12 ? \"AM\" : \"PM\");\r\n    if (date.getHours() === 0 || date.getHours() === 12) {\r\n      hours = 12;\r\n    }\r\n    else {\r\n      hours = date.getHours() % 12;\r\n    }\r\n    return `${date.getFullYear()}-${date.getMonth() < 9 ? `0${date.getMonth() + 1}` : `${date.getMonth() + 1}`}-${date.getDate() < 10 ? `0${date.getDate()}` : `${date.getDate()}`} ${hours < 10 ? `0${hours}` : `${hours}`}:${date.getMinutes() < 10 ? `0${date.getMinutes()}` : `${date.getMinutes()}`} ${modifier}`\r\n  }\r\n\r\n  const startMint = async () => {\r\n    if (!account) {\r\n      window.alert(\"connect with wallet\");\r\n      return;\r\n    }\r\n    if (files.length === 0) {\r\n      window.alert(\"upload an image before minting\");\r\n      return;\r\n    }\r\n    const file = files[0];\r\n    if (!(['jpg', 'png', 'gif', 'mp4'].includes(file.name.slice(-3).toLowerCase())) && file.name.slice(-4).toLowerCase() !== 'webp') {\r\n      window.alert(\"incorrect file extension\");\r\n      return;\r\n    }\r\n    const startMint = Math.round(Number(Date.parse(dateTime)) / 1000);\r\n    if (start === 0) {\r\n      if (startMint < (Math.round(Date.now() / 1000) - 12 * 30 * 24 * 3600)) {\r\n        window.alert('must choose a start time within past year!');\r\n        return;\r\n      }\r\n    }\r\n    else if (start > startMint) {\r\n      window.alert('choose a start time after timestamp of your last data used in NFTs!');\r\n      return;\r\n    }\r\n    if (!(amountRuns >= 100 && amountRuns <= 500)) {\r\n      window.alert('number of data points from pebble tracker must be between 100 and 500');\r\n      return;\r\n    }\r\n\r\n    //adding file that was uploaded with name avatar (name doesn't really matter)\r\n    const formData = new FormData();\r\n    formData.append('avatar', file);\r\n\r\n    // window.alert('made it here before post')\r\n    //use axios to post image with multer and upload to pinata\r\n    const mintImageRes = await axios.post(`/mint-upload/${account}`, formData, {\r\n      headers: {\r\n        'Content-type': 'multipart/form-data'\r\n      }\r\n    });\r\n\r\n    //set URI of uploaded image from pinata\r\n    setCurrentImageURI(mintImageRes.data.imageURL);\r\n\r\n    //call mint function with start, runs, and image URI\r\n    const mintRes = await fetch(`/mint/${account}?runs=${amountRuns}&start=${startMint}&imageuri=${mintImageRes.data.imageURL}`);\r\n    const mintBody = await mintRes.json();\r\n    if (mintBody.reason) {\r\n      window.alert(mintBody.reason);\r\n      return;\r\n    }\r\n    else {\r\n      setScore(mintBody.score);\r\n      setRating(mintBody.rating);\r\n      setAverage(mintBody.average);\r\n      setPendingTokenURI(mintBody.tokenURI);\r\n      setPendingTimeStamp(mintBody.lastTimeStamp);\r\n      setR(mintBody.r);\r\n      setS(mintBody.s);\r\n      setV(mintBody.v);\r\n      setPendingMint(true);\r\n      window.alert(`score is ${mintBody.score}, average is ${mintBody.average}, last time stamp is ${mintBody.lastTimeStamp}, tokenURI is ${mintBody.tokenURI}, rating is ${mintBody.rating}`)\r\n      return;\r\n    }\r\n  }\r\n\r\n  //after all the calculations for score and rating and getting a token URI, proceed to mint NFT if user desires\r\n  const finishMint = async () => {\r\n    invokeInsuranceNftMint(hexedTokenUri)\r\n  }\r\n\r\n  const joinUpdateDao = async () => {\r\n    if (daoJoin || daoUpdate) {\r\n      const lastMetaData = await fetch(`dao-join-update/${account}`);\r\n      const lastMetaDataBody = await lastMetaData.json();\r\n      if (lastMetaDataBody.reason) {\r\n        window.alert(lastMetaDataBody.reason);\r\n        return;\r\n      }\r\n      const level = lastMetaDataBody.level;\r\n      const tokenId = lastMetaDataBody.tokenId;\r\n      const timeStamp = lastMetaDataBody.timeStamp;\r\n      const r = lastMetaDataBody.r;\r\n      const s = lastMetaDataBody.s;\r\n      const v = lastMetaDataBody.v;\r\n      let value = 0;\r\n      if (daoJoin) {\r\n        const costs = await DAOContract.methods.getCosts().call();\r\n        value = costs[level - 1];\r\n      }\r\n\r\n      await DAOContract.methods.addToDao(level, tokenId, timeStamp, r, s, v).send({ from: account, value: value })\r\n        .on('receipt', async function (receipt) {\r\n          setDAOJoin(false);\r\n          setDAOUpdate(false);\r\n          setDAOShow(false);\r\n          setDAOLevel(0);\r\n          setDAORating(\"\");\r\n        })\r\n    }\r\n    else {\r\n      setDAOJoin(false);\r\n      setDAOUpdate(false);\r\n      setDAOShow(false);\r\n      setDAOLevel(0);\r\n      setDAORating(\"\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <section className='jumbotron breadcrumb no-bg'>\r\n        <div className='mainbreadcrumb'>\r\n          <div className='container'>\r\n            <div className='row m-10-hor'>\r\n              <div className='col-12'>\r\n                <h1 className='text-center'>Mint</h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className='container' style={{ paddingBottom: \"0.1em\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-7 offset-lg-1 mb-5\">\r\n            <form id=\"form-create-item\" className=\"form-border\" action=\"#\">\r\n              <div className=\"field-set\">\r\n                <h5>Upload file</h5>\r\n\r\n                <div className=\"d-create-file\">\r\n                  {files.length === 0 && <p id=\"file_name\">PNG, JPG, GIF, WEBP or MP4. Max 200mb.</p>}\r\n                  {files.map((x, index) =>\r\n                    <p key={`${index}`}>{x.name}</p>\r\n                  )}\r\n                  <div className='browse'>\r\n                    <input type=\"button\" id=\"get_file\" className=\"btn-main\" value=\"Browse\" />\r\n                    <input id='upload_file' type=\"file\" onChange={fileLoad} />\r\n                  </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"spacer-single\"></div>\r\n\r\n                <h5>Data Points (min: 100, max : 500) &emsp;{deviceIMEI != \"\" && <span>Device IMEI : {deviceIMEI}</span>} </h5>\r\n                <input type=\"number\" name=\"item_title\" id=\"item_title\" className=\"form-control\" value={amountRuns} onChange={(e) => { setAmountRuns(e.target.value) }} />\r\n\r\n                <div className=\"spacer-10\"></div>\r\n\r\n                {/* <h5>Start Date &ensp;(your start must be after {start === 0 ? <span>{displayStart(Math.round(Date.now() / 1000) - 12 * 30 * 24 * 3600)}</span> : <span>{displayStart(Number(start))}</span>})</h5> */}\r\n                <input type=\"datetime-local\" name=\"start_date\" id=\"start_date\" className=\"form-control\" value={dateTime} onChange={(e) => { setDateTime(e.target.value) }} />\r\n\r\n                <div className=\"spacer-10\"></div>\r\n\r\n                {pendingMint && <h5>Score: {score} and rating : {rating}</h5>}\r\n\r\n                {deviceIMEI !== \"\" || account ? <input type=\"button\" id=\"submit\" className=\"btn-main\" value=\"Get Mint Data\" onClick={() => startMint()} /> : <h5>Address has no registered device</h5>} {pendingMint && <span style={{ marginLeft: \"3em\" }}><input type=\"button\" id=\"submit\" className=\"btn-main\" value=\"Mint Now\" onClick={() => finishMint()} /></span>}\r\n\r\n                {daoShow && <span style={{ marginLeft: \"3em\" }}><input type=\"button\" id=\"submit\" className=\"btn-main\" value=\"Join/Update Dao\" onClick={() => joinUpdateDao()} /> &ensp; Rating: {daoRating} &ensp; Level: {daoLevel}</span>}\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"col-lg-3 col-sm-6 col-xs-12\">\r\n            <h5>Preview item</h5>\r\n            <div className=\"nft__item m-0\">\r\n\r\n              <div className=\"author_list_pp\">\r\n                <span>\r\n                  <img className=\"lazy\" src={`./img/author/${(account in imageMap) ? imageMap[account] : \"author-5\"}.jpg`} alt=\"\" />\r\n                  <i className=\"fa fa-check\"></i>\r\n                </span>\r\n              </div>\r\n              <div className=\"nft__item_wrap\">\r\n                <span>\r\n                  <img src={`${(files.length > 0) ? fileURL : \"./img/collections/coll-item-3.jpg\"}`} id=\"get_file_2\" className=\"lazy nft__item_preview\" alt=\"\" />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </section>\r\n\r\n      {penaltyLevels.length > 0 && <section className='container' style={{ paddingTop: 0 }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-5 mb-5\" >\r\n            <Table striped bordered hover size=\"md\" >\r\n              <thead style={{ backgroundColor: \"white\", border: \"2px solid black\" }}>\r\n                <tr>\r\n                  <th>Levels</th>\r\n                  <th>Penalty Score</th>\r\n                  <th>Acc Levels</th>\r\n\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {penaltyLevels.map((val, index) => {\r\n                  let currentVal = 0;\r\n                  if (index > 0) {\r\n                    for (var i = 0; i <= index; i++) {\r\n                      currentVal += Number(penaltyLevels[i]);\r\n                    }\r\n                  }\r\n                  return (<tr style={{ backgroundColor: \"white\", border: \"2px solid black\" }}>\r\n                    <td>{index + 1}</td>\r\n                    {index === 0 ? <td>{val}</td> : <td>{val}</td>}\r\n                    <td>{accLevels[index]}</td>\r\n                  </tr>)\r\n                })}\r\n              </tbody>\r\n\r\n            </Table>\r\n          </div>\r\n\r\n          <div className=\"col-lg-5 offset-lg-1 mb-5\" >\r\n            <Table striped bordered hover size=\"md\" >\r\n              <thead style={{ backgroundColor: \"white\", border: \"2px solid black\" }}>\r\n                <tr>\r\n                  <th>Rating</th>\r\n                  <th>DAO Costs</th>\r\n                  <th>AVG Scores</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {costLevels.map((val, index) => {\r\n                  let scoreText = \"\";\r\n                  if (index == 0) {\r\n                    scoreText = `< ${ratingBreaks[1]}`;\r\n                  }\r\n                  else if (index == costLevels.length - 1) {\r\n                    scoreText = `> ${ratingBreaks[index]}`;\r\n                  }\r\n                  else {\r\n                    scoreText = `${ratingBreaks[index]}-${ratingBreaks[index + 1]}`;\r\n                  }\r\n                  return (<tr style={{ backgroundColor: \"white\", border: \"2px solid black\" }}>\r\n                    {/*<td>{ratingMap[index+1]}</td>*/}\r\n                    <td>{ratingLabels[ratingLabels.length - index - 1]}</td>\r\n                    <td>{costLevels[index]/100000} USDC</td>\r\n                    <td>{scoreText}</td>\r\n                    {/*<td>{scoreMap[index+1]}</td>*/}\r\n                  </tr>)\r\n                })}\r\n              </tbody>\r\n\r\n            </Table>\r\n          </div>\r\n        </div>\r\n      </section>}\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default Mint;\r\n","import { useStarknetInvoke } from '@starknet-react/core'\n\nexport function useInsuranceNftContract(account, contract) {\n  const { data: mintData, loading: mintLoading, error: mintError, reset: mintReset, invoke: mintTokens } = useStarknetInvoke({ contract: contract, method: 'mint' })\n\n  const { data: setTokenURIData, loading: setTokenURILoading, error: setTokenURIError, reset: setTokenURIReset, invoke: invokeSetTokenURI } = useStarknetInvoke({ contract: contract, method: 'setTokenURI' })\n\n  const invokeInsuranceNftMint = (tokenUri) => {\n    mintTokens({ args: [tokenUri, { 'low': 0, 'high': 123 }, account, '1', '1', '1'] })\n  }\n\n  const invokeSetTokenUri = (uri) => {\n    invokeSetTokenURI({ args: [uri] })\n  }\n\n  return { invokeInsuranceNftMint, invokeSetTokenUri }\n}","import { useContract } from '@starknet-react/core'\nimport InsuranceNftAbi from '../../abis/InsuranceNFT.json';\n\nexport function useNftContract() {\n  return useContract({\n    abi: InsuranceNftAbi.abi,\n    address: '0x0277ea96e3903cb106fa2502996a89c218456b033a3820ccf30f6a3193b70bdf',\n  })\n}\n","import { useContract } from '@starknet-react/core'\n\nimport InsuranceDAOAbi from '../../abis/InsuranceDAOMintComp.json';\n\nexport function useInsuranceDAOMintContract() {\n  return useContract({\n    abi: InsuranceDAOAbi.abi,\n    address: '0x025fe0c9662ac90461ebd863844227b42210e969f98dd418fb739388fd2f7db3',\n  })\n}","import React, { useState, createContext } from 'react';\nexport const AccountContext = createContext({});\n\nexport default function AccountProvider({ children, props }) {\n  const [globalAccount, setGlobalAccount] = useState(\"\");\n  const [globalActive, setGlobalActive] = useState(false);\n  const [globalChainId, setGlobalChainId] = useState(0)\n\n\n  return (\n    <AccountContext.Provider\n      value={{\n        globalAccount,\n        globalActive,\n        globalChainId,\n        setGlobalAccount,\n        setGlobalActive,\n        setGlobalChainId\n      }}\n    >\n      {children}\n    </AccountContext.Provider>\n  );\n}\n","import React from 'react';\r\nimport { Link } from '@reach/router';\r\n\r\nconst Footer= () => (\r\n  <footer className=\"footer-light\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3 col-sm-6 col-xs-1\">\r\n                        <div className=\"widget\">\r\n                            <h5>About</h5>\r\n                            <ul>\r\n                                <li><Link to=\"\">starkBET</Link></li>\r\n                                <li><Link to=\"\">Vision</Link></li>\r\n                                <li><Link to=\"\">FAQs</Link></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-sm-6 col-xs-1\">\r\n                        <div className=\"widget\">\r\n                            <h5>Resources</h5>\r\n                            <ul>\r\n                                <li><Link to=\"\">Help Center</Link></li>\r\n                                <li><Link to=\"\">Partners</Link></li>\r\n                                <li><Link to=\"\">Suggestions</Link></li>\r\n                                <li><Link to=\"\">Discord</Link></li>\r\n                                <li><Link to=\"\">Docs</Link></li>\r\n                                <li><Link to=\"\">Newsletter</Link></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-sm-6 col-xs-1\">\r\n                        <div className=\"widget\">\r\n                            <h5>Community</h5>\r\n                            <ul>\r\n                                <li><Link to=\"\">Community</Link></li>\r\n                                <li><Link to=\"\">Documentation</Link></li>\r\n                                <li><Link to=\"\">Brand Assets</Link></li>\r\n                                <li><Link to=\"\">Blog</Link></li>\r\n                                <li><Link to=\"\">Forum</Link></li>\r\n                                <li><Link to=\"\">Mailing List</Link></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-sm-6 col-xs-1\">\r\n                        <div className=\"widget\">\r\n                            <h5>Newsletter</h5>\r\n                            <p>Signup for our newsletter to get the latest news in your inbox.</p>\r\n                            <form action=\"#\" className=\"row form-dark\" id=\"form_subscribe\" method=\"post\" name=\"form_subscribe\">\r\n                                <div className=\"col text-center\">\r\n                                    <input className=\"form-control\" id=\"txt_subscribe\" name=\"txt_subscribe\" placeholder=\"enter your email\" type=\"text\" /> \r\n                                    <Link to=\"\" id=\"btn-subscribe\">\r\n                                      <i className=\"arrow_right bg-color-secondary\"></i>\r\n                                    </Link>\r\n                                    <div className=\"clearfix\"></div>\r\n                                </div>\r\n                            </form>\r\n                            <div className=\"spacer-10\"></div>\r\n                            <small>Your email is safe with us. We don't spam.</small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"subfooter\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"de-flex\">\r\n                                <div className=\"de-flex-col\">\r\n                                    <span onClick={()=> window.open(\"\", \"_self\")}>\r\n                                        <span className=\"copy\">&copy; Made By: StarkDAD</span>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"de-flex-col\">\r\n                                    <div className=\"social-icons\">\r\n                                        <span onClick={()=> window.open(\"\", \"_self\")}><i className=\"fa fa-facebook fa-lg\"></i></span>\r\n                                        <span onClick={()=> window.open(\"\", \"_self\")}><i className=\"fa fa-twitter fa-lg\"></i></span>\r\n                                        <span onClick={()=> window.open(\"\", \"_self\")}><i className=\"fa fa-linkedin fa-lg\"></i></span>\r\n                                        <span onClick={()=> window.open(\"\", \"_self\")}><i className=\"fa fa-rss fa-lg\"></i></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n);\r\nexport default Footer;","import { useStarknetCall } from '@starknet-react/core'\n\nexport function useGetTokenFromAddress(contract, tokenIndex) {\n  const { data, loading, error } = useStarknetCall({ contract, method: 'getTokenFromAddressArray', args: [tokenIndex] })\n\n  console.log(data, 'getTokenFromAddressArray')\n  return { data, loading, error }\n}","import React, { Component } from 'react';\r\n\r\nexport default class ScrollToTop extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      is_visible: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var scrollComponent = this;\r\n    document.addEventListener(\"scroll\", function(e) {\r\n      scrollComponent.toggleVisibility();\r\n    });\r\n  }\r\n\r\n  toggleVisibility() {\r\n    if (window.pageYOffset > 600) {\r\n      this.setState({\r\n        is_visible: true\r\n      });\r\n    } else { this.setState({\r\n        is_visible: false\r\n      });\r\n    }\r\n  }\r\n\r\n  scrollToTop() {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { is_visible } = this.state;\r\n    return (\r\n      <div id='scroll-to-top' className='init'>\r\n        {is_visible && (\r\n          <div onClick={() => this.scrollToTop()}>\r\n            <i className=\"\"></i>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport Breakpoint, { BreakpointProvider, setDefaultBreakpoints } from \"react-socks\";\r\nimport { header } from 'react-bootstrap';\r\nimport { Link } from '@reach/router';\r\nimport useOnclickOutside from \"react-cool-onclickoutside\";\r\nimport { AccountContext } from '../../state/contexts/AccountContext';\r\n\r\nimport {\r\n  useContract,\r\n  useStarknet,\r\n  InjectedConnector\r\n} from '@starknet-react/core'\r\n\r\nsetDefaultBreakpoints([\r\n  { xs: 0 },\r\n  { l: 1199 },\r\n  { xl: 1200 }\r\n]);\r\n\r\nconst NavLink = props => (\r\n  <Link\r\n    {...props}\r\n    getProps={({ isCurrent }) => {\r\n      // the object returned here is passed to the\r\n      // anchor element's props\r\n      return {\r\n        className: isCurrent ? 'active' : 'non-active',\r\n      };\r\n    }}\r\n  />\r\n);\r\n\r\n\r\nconst Header = function () {\r\n  const { account, connect } = useStarknet()\r\n  const [openMenu, setOpenMenu] = React.useState(false);\r\n  const [openMenu1, setOpenMenu1] = React.useState(false);\r\n  const [openMenu2, setOpenMenu2] = React.useState(false);\r\n  const [openMenu3, setOpenMenu3] = React.useState(false);\r\n  const { setGlobalAccount } = useContext(AccountContext);\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      setGlobalAccount(account)\r\n    }\r\n  }, [account])\r\n\r\n  const disconnect = () => {\r\n    setGlobalAccount('')\r\n    console.log(\"disconnect\")\r\n    //   argentX.setConnected(false)\r\n    //   argentX.setGlobalAccount('')\r\n  }\r\n\r\n\r\n  const handleBtnClick = () => {\r\n    setOpenMenu(!openMenu);\r\n  };\r\n  const handleBtnClick1 = () => {\r\n    setOpenMenu1(!openMenu1);\r\n  };\r\n  const handleBtnClick2 = () => {\r\n    setOpenMenu2(!openMenu2);\r\n  };\r\n  const handleBtnClick3 = () => {\r\n    setOpenMenu3(!openMenu3);\r\n  };\r\n  const closeMenu = () => {\r\n    setOpenMenu(false);\r\n  };\r\n  const closeMenu1 = () => {\r\n    setOpenMenu1(false);\r\n  };\r\n  const closeMenu2 = () => {\r\n    setOpenMenu2(false);\r\n  };\r\n  const closeMenu3 = () => {\r\n    setOpenMenu3(false);\r\n  };\r\n  const ref = useOnclickOutside(() => {\r\n    closeMenu();\r\n  });\r\n  const ref1 = useOnclickOutside(() => {\r\n    closeMenu1();\r\n  });\r\n  const ref2 = useOnclickOutside(() => {\r\n    closeMenu2();\r\n  });\r\n  const ref3 = useOnclickOutside(() => {\r\n    closeMenu3();\r\n  });\r\n\r\n  const [showmenu, btn_icon] = useState(false);\r\n  useEffect(() => {\r\n    const header = document.getElementById(\"myHeader\");\r\n    const totop = document.getElementById(\"scroll-to-top\");\r\n    const sticky = header.offsetTop;\r\n    const scrollCallBack = window.addEventListener(\"scroll\", () => {\r\n      btn_icon(false);\r\n      if (window.pageYOffset > sticky) {\r\n        header.classList.add(\"sticky\");\r\n        totop.classList.add(\"show\");\r\n\r\n      } else {\r\n        header.classList.remove(\"sticky\");\r\n        totop.classList.remove(\"show\");\r\n      } if (window.pageYOffset > sticky) {\r\n        closeMenu();\r\n      }\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", scrollCallBack);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <header id=\"myHeader\" className='navbar white'>\r\n      <div className='container'>\r\n        <div className='row w-100-nav'>\r\n          <div className='logo px-0'>\r\n            <div className='navbar-title navbar-item'>\r\n              <NavLink to=\"/\">\r\n                \r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='search'>\r\n            <input id=\"quick_search\" className=\"xs-hide\" name=\"quick_search\" placeholder=\"Search for items here...\" type=\"text\" />\r\n          </div>\r\n\r\n          <BreakpointProvider>\r\n            <Breakpoint l down>\r\n              {showmenu &&\r\n                <div className='menu'>\r\n\r\n\r\n\r\n                  <div className='navbar-item'>\r\n                    <NavLink to=\"/home\" onClick={() => btn_icon(!showmenu)}>\r\n                      HOME\r\n                    </NavLink>\r\n                  </div>\r\n                  <div className='navbar-item'>\r\n                    <NavLink to=\"/profile\" onClick={() => btn_icon(!showmenu)}>\r\n                      PROFILE\r\n                    </NavLink>\r\n                  </div>\r\n                  <div className='navbar-item'>\r\n                    <NavLink to=\"/holdings\" onClick={() => btn_icon(!showmenu)}>\r\n                      DAO HOLDINGS\r\n                    </NavLink>\r\n                  </div>\r\n                  <div className='navbar-item'>\r\n                    <NavLink to=\"/mint\" onClick={() => btn_icon(!showmenu)}>\r\n                      MINT\r\n                    </NavLink>\r\n                  </div>\r\n\r\n                </div>\r\n              }\r\n            </Breakpoint>\r\n\r\n            <Breakpoint xl>\r\n              <div className='menu'>\r\n\r\n                <div className='navbar-item'>\r\n                  <NavLink to=\"/activity\">\r\n                    HOME\r\n                    <span className='lines'></span>\r\n                  </NavLink>\r\n                </div>\r\n\r\n                <div className='navbar-item'>\r\n                  <NavLink to=\"/profile\">\r\n                    DEVELOPER\r\n                    <span className='lines'></span>\r\n                  </NavLink>\r\n                </div>\r\n                <div className='navbar-item'>\r\n                  <NavLink to=\"/holdings\">\r\n                    DOCS\r\n                    <span className='lines'></span>\r\n                  </NavLink>\r\n                </div>\r\n\r\n                <div className='navbar-item'>\r\n                  <NavLink to=\"/mint\">\r\n                    MINT\r\n                    <span className='lines'></span>\r\n                  </NavLink>\r\n                </div>\r\n\r\n              </div>\r\n            </Breakpoint>\r\n          </BreakpointProvider>\r\n          <div className='mainside'>\r\n            {account && <p style={{ color: \"navy\" }}>Account: {`${account.slice(0,5)}...${account.slice(-4)}`}</p>}\r\n            {account ? null : <button className=\"btn-main\" onClick={() => connect(new InjectedConnector())}style={{ backgroundColor: 'orange', color: 'navy' }}>CONNECT WALLET</button>}\r\n          </div>\r\n        </div>\r\n\r\n        <button className=\"nav-icon\" onClick={() => btn_icon(!showmenu)}>\r\n          <div className=\"menu-line black\"></div>\r\n          <div className=\"menu-line1 white\"></div>\r\n          <div className=\"menu-line2 white\"></div>\r\n        </button>\r\n\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport Particles from \"react-tsparticles\";\r\n\r\nclass Particle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.particlesInit = this.particlesInit.bind(this);\r\n    this.particlesLoaded = this.particlesLoaded.bind(this);\r\n  }\r\n\r\n  particlesInit(main) {\r\n    /*console.log(main);*/\r\n\r\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\r\n  }\r\n\r\n  particlesLoaded(container) {\r\n    /*console.log(container);*/\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Particles\r\n        id=\"tsparticles\"\r\n        init={this.particlesInit}\r\n        loaded={this.particlesLoaded}\r\n        options={{\r\n          background: {\r\n            color: {\r\n              value: \"none\",\r\n            },\r\n          },\r\n          fpsLimit: 70,\r\n          interactivity: {\r\n            detectsOn: \"canvas\",\r\n            events: {\r\n              onClick: {\r\n                enable: true,\r\n                mode: \"push\",\r\n              },\r\n              onHover: {\r\n                enable: true,\r\n                mode: \"repulse\",\r\n              },\r\n              resize: true,\r\n            },\r\n            modes: {\r\n              bubble: {\r\n                distance: 400,\r\n                duration: 2,\r\n                opacity: 0.8,\r\n                size: 40,\r\n              },\r\n              push: {\r\n                quantity: 1,\r\n              },\r\n              repulse: {\r\n                distance: 200,\r\n                duration: 0.4,\r\n              },\r\n            },\r\n          },\r\n          particles: {\r\n            color: {\r\n              value: \"#ffffff\",\r\n            },\r\n            links: {\r\n              color: \"#ffffff\",\r\n              distance: 150,\r\n              enable: false,\r\n              opacity: 0.5,\r\n              width: 1,\r\n            },\r\n            collisions: {\r\n              enable: true,\r\n            },\r\n            move: {\r\n              direction: \"none\",\r\n              enable: true,\r\n              outMode: \"bounce\",\r\n              random: false,\r\n              speed: 2,\r\n              straight: false,\r\n            },\r\n            number: {\r\n              density: {\r\n                enable: true,\r\n                value_area: 400,\r\n              },\r\n              value: 20,\r\n            },\r\n            opacity: {\r\n              value: 0.5,\r\n            },\r\n            shape: {\r\n              type: \"circle\",\r\n            },\r\n            size: {\r\n              random: true,\r\n              value: 5,\r\n            },\r\n          },\r\n          detectRetina: true,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Particle;","import React from 'react';\r\nimport Reveal from 'react-awesome-reveal';\r\nimport { keyframes } from \"@emotion/react\";\r\n\r\nconst fadeInUp = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(40px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n`;\r\n\r\nconst sliderMainParticle = () => (\r\n  <div className=\"container\">\r\n    <div className=\"row align-items-center\">\r\n      <div className=\"col-md-6\">\r\n        <h6 style={{ color: 'orange', fontSize: '26px', fontWeight: 'bold' }}>\r\n          <span className=\"text-uppercase\">Introducing...</span>\r\n        </h6>\r\n        <Reveal className='onStep' keyframes={fadeInUp} delay={300} duration={900} triggerOnce>\r\n          <h1 style={{ color: 'white', fontSize: '56px', fontWeight: 'bold' }}>starkBET</h1>\r\n        </Reveal>\r\n        <Reveal className='onStep' keyframes={fadeInUp} delay={600} duration={900} triggerOnce>\r\n          <p style={{ color: 'white', fontSize: '20px', fontWeight: 'bold' }}>\r\n            Dive into the future of betting with starkBET, where you predict and bet on Stark gas fees. Connect your wallet, set your predictions, and place your bets with precision.\r\n          </p>\r\n        </Reveal>\r\n        <div className=\"spacer-10\"></div>\r\n        <Reveal className='onStep' keyframes={fadeInUp} delay={800} duration={900} triggerOnce>\r\n          <span onClick={()=> window.open(\"#\", \"_self\")} \r\n                style={{ backgroundColor: 'orange', color: 'white', padding: '15px 30px', fontSize: '24px', fontWeight: 'bold', borderRadius: '5px', cursor: 'pointer' }}>\r\n            Start Betting\r\n          </span>\r\n        </Reveal>\r\n      </div>\r\n      <div className=\"col-md-6 xs-hide\">\r\n        {/* Insert an appropriate image for gas fee betting */}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default sliderMainParticle;\r\n","import React from 'react';\r\nimport Reveal from 'react-awesome-reveal';\r\nimport { keyframes } from \"@emotion/react\";\r\n\r\nconst fadeInUp = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n`;\r\n\r\nconst featureBox = () => (\r\n  <div className='row'>\r\n    <div className=\"col-lg-4 col-md-6 mb-3\">\r\n      <div className=\"feature-box f-boxed style-3\">\r\n        <Reveal className='onStep' keyframes={fadeInUp} delay={0} duration={600} triggerOnce>\r\n          <i className=\"bg-color-2 i-boxed icon_wallet\"></i>\r\n        </Reveal>\r\n          <div className=\"text\">\r\n            <Reveal className='onStep' keyframes={fadeInUp} delay={100} duration={600} triggerOnce>\r\n              <h4 className=\"\">Connect Your Wallet</h4>\r\n            </Reveal>\r\n            <Reveal className='onStep' keyframes={fadeInUp} delay={200} duration={600} triggerOnce>\r\n              <p className=\"\">Begin your betting experience by securely connecting your digital wallet to starkBET.</p>\r\n            </Reveal>\r\n          </div>\r\n          <i className=\"wm icon_wallet\"></i>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"col-lg-4 col-md-6 mb-3\">\r\n      <div className=\"feature-box f-boxed style-3\">\r\n        <Reveal className='onStep' keyframes={fadeInUp} delay={0} duration={600} triggerOnce>\r\n          <i className=\"bg-color-2 i-boxed icon_chart-bars\"></i>\r\n        </Reveal>\r\n          <div className=\"text\">\r\n            <Reveal className='onStep' keyframes={fadeInUp} delay={100} duration={600} triggerOnce>\r\n              <h4 className=\"\">Predict Gas Fees</h4>\r\n            </Reveal>\r\n            <Reveal className='onStep' keyframes={fadeInUp} delay={200} duration={600} triggerOnce>\r\n              <p className=\"\">Make your prediction on the Ethereum gas fees and enter the amount you wish to bet.</p>\r\n            </Reveal>\r\n          </div>\r\n          <i className=\"wm icon_chart-bars\"></i>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"col-lg-4 col-md-6 mb-3\">\r\n      <div className=\"feature-box f-boxed style-3\">\r\n        <Reveal className='onStep' keyframes={fadeInUp} delay={0} duration={600} triggerOnce>\r\n          <i className=\"bg-color-2 i-boxed icon_dollar\"></i>\r\n        </Reveal>\r\n          <div className=\"text\">\r\n            <Reveal className='onStep' keyframes={fadeInUp} delay={100} duration={600} triggerOnce>\r\n              <h4 className=\"\">Place Your Bet</h4>\r\n            </Reveal>\r\n            <Reveal className='onStep' keyframes={fadeInUp} delay={200} duration={600} triggerOnce>\r\n              <p className=\"\">Enter the stake for your bet and confirm. Watch the market and see if your prediction wins!</p>\r\n            </Reveal>\r\n          </div>\r\n          <i className=\"wm icon_dollar\"></i>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default featureBox;","import React, { useState, useContext, useEffect } from 'react';\r\nimport Particle from '../components/Particle';\r\nimport SliderMainParticle from '../components/SliderMainParticle';\r\n\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport Footer from '../components/Footer';\r\nimport FeatureBox from '../components/FeatureBox';\r\n\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport {\r\n  useStarknet,\r\n  InjectedConnector\r\n} from '@starknet-react/core'\r\n\r\n\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  header#myHeader .logo .d-block{\r\n    display: none !important;\r\n  }\r\n  header#myHeader .logo .d-none{\r\n    display: block !important;\r\n  }\r\n  .navbar .mainside a{\r\n    background: #8364e2;\r\n    &:hover{\r\n      box-shadow: 2px 2px 20px 0px #8364e2;\r\n    }\r\n  }\r\n  .item-dropdown{\r\n    .dropdown{\r\n      a{\r\n        &:hover{\r\n          background: #8364e2;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .btn-main{\r\n    background: #8364e2;\r\n    &:hover{\r\n      box-shadow: 2px 2px 20px 0px #8364e2;\r\n    }\r\n  }\r\n  p.lead{\r\n    color: #a2a2a2;\r\n  }\r\n  .navbar .navbar-item .lines{\r\n    border-bottom: 2px solid #8364e2;\r\n  }\r\n  .jumbotron.no-bg{\r\n    height: 100vh;\r\n    overflow: hidden;\r\n    background-repeat: repeat;\r\n    background-size: cover;\r\n    background-position: bottom;\r\n    background-repeat: no-repeat;\r\n  }\r\n  #tsparticles{\r\n    top: 0;\r\n  }\r\n  .text-uppercase.color{\r\n    color: #8364e2;\r\n  }\r\n  .de_count h3 {\r\n    font-size: 36px;\r\n    margin-bottom: 0px;\r\n  }\r\n  .de_count h5{\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n  }\r\n  h2 {\r\n    font-size: 30px;\r\n  }\r\n  .box-url{\r\n    text-align: center;\r\n    h4{\r\n      font-size: 16px;\r\n    }\r\n  }\r\n  .de_countdown{\r\n    border: solid 2px #8364e2;\r\n  }\r\n  .author_list_pp, .author_list_pp i, \r\n  .nft_coll_pp i, .feature-box.style-3 i, \r\n  footer.footer-light #form_subscribe #btn-subscribe i, \r\n  #scroll-to-top div{\r\n    background: #8364e2;\r\n  }\r\n  footer.footer-light .subfooter .social-icons span i{\r\n    background: #403f83;\r\n  }\r\n  .author_list_pp:hover img{\r\n    box-shadow: 0px 0px 0px 2px #8364e2;\r\n  }\r\n  .nft__item_action span{\r\n    color: #8364e2;\r\n  }\r\n  .feature-box.style-3 i.wm{\r\n    color: rgba(131,100,226, .1);\r\n  }\r\n  @media only screen and (max-width: 1199px) {\r\n    .navbar{\r\n      \r\n    }\r\n    .navbar .menu-line, .navbar .menu-line1, .navbar .menu-line2{\r\n      background: #fff;\r\n    }\r\n    .item-dropdown .dropdown a{\r\n      color: #fff !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Landing = () => {\r\n  const { account, connect } = useStarknet()\r\n\r\n  return (\r\n    <div>\r\n      <GlobalStyles />\r\n      <section className=\"jumbotron no-bg\" style={{ backgroundImage: `url(${'./img/background/8.jpg'})` }}>\r\n        <Particle />\r\n        <SliderMainParticle />\r\n      </section>\r\n      \r\n      <section className='container no-top'>\r\n        <div className='row'>\r\n          <div className=\"spacer-double\"></div>\r\n          <div className='col-lg-12 mb-3'>\r\n            <h2>How It Works:</h2>\r\n          </div>\r\n          <FeatureBox />\r\n        </div>\r\n      </section>\r\n\r\n      <Footer />\r\n    </div>\r\n  )\r\n};\r\nexport default Landing;","import { createSelector } from \"reselect\";\n\n\n//Store Selectors\nexport const nftBreakdownState = (state) => state.NFT.nftBreakdown;\nexport const nftShowcaseState = (state) => state.NFT.nftShowcase;\nexport const nftDetailState = (state) => state.NFT.nftDetail;\nexport const hotCollectionsState = (state) => state.hotCollection.hotCollections;\nexport const authorsState = (state) => state.authors.authorList;\nexport const authorRankingsState = (state) => state.authors.authorRanking;\n\nexport const auctionedNfts = createSelector(nftBreakdownState, ( nfts ) => {\n    if(!nfts.data) {\n        return [];\n    }\n    const acutioned = nfts.data.filter(nft => !!nft.deadline);\n    return acutioned;\n});","import axios from 'axios';\n\nexport const Axios = axios.create();\nexport const Canceler = axios.CancelToken.source();","import { \n    createAction as action, \n    createAsyncAction as asyncAction \n} from 'typesafe-actions';\n\nexport const getNftBreakdown = asyncAction(\n    'nft/GET_NFT_BREAKDOWN',\n    'nft/GET_NFT_BREAKDOWN_SUCCESS',\n    'nft/GET_NFT_BREAKDOWN_FAIL'\n)();\n\nexport const getNftShowcase = asyncAction(\n    'nft/GET_NFT_SHOWCASE',\n    'nft/GET_NFT_SHOWCASE_SUCCESS',\n    'nft/GET_NFT_SHOWCASE_FAIL'\n)();\n\nexport const getNftDetail = asyncAction(\n    'nft/GET_NFT_DETAIL',\n    'nft/GET_NFT_DETAIL_SUCCESS',\n    'nft/GET_NFT_DETAIL_FAIL'\n)();\n\nexport const getHotCollections = asyncAction(\n    'nft/GET_HOT_COLLECTIONS',\n    'nft/GET_HOT_COLLECTIONS_SUCCESS',\n    'nft/GET_HOT_COLLECTIONS_FAIL'\n)();\n\nexport const getAuthorList = asyncAction(\n    'nft/GET_AUTHOR_LIST',\n    'nft/GET_AUTHOR_LIST_SUCCESS',\n    'nft/GET_AUTHOR_LIST_FAIL'\n)();\n\nexport const getAuthorRanking = asyncAction(\n    'nft/GET_AUTHOR_RANKING',\n    'nft/GET_AUTHOR_RANKING_SUCCESS',\n    'nft/GET_AUTHOR_RANKING_FAIL'\n)();\n\nexport const clearNfts = action('nft/CLEAR_ALL_NFTS')();","import { Axios, Canceler } from '../../../core/axios';\nimport * as actions from '../../actions';\n\nexport const fetchNftsBreakdown = () => async (dispatch, getState) => {\n  \n  //access the state\n  const state = getState();\n  console.log(state);\n\n  dispatch(actions.getNftBreakdown.request(Canceler.cancel));\n\n  try {\n    const { data } = await Axios.get('/mock_data/nfts.json', {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n\n    dispatch(actions.getNftBreakdown.success(data));\n  } catch (err) {\n    dispatch(actions.getNftBreakdown.failure(err));\n  }\n};\n\nexport const fetchNftShowcase = () => async (dispatch) => {\n\n  dispatch(actions.getNftShowcase.request(Canceler.cancel));\n\n  try {\n    const { data } = await Axios.get('/mock_data/nft_showcase.json', {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n\n    dispatch(actions.getNftShowcase.success(data));\n  } catch (err) {\n    dispatch(actions.getNftShowcase.failure(err));\n  }\n};\n\nexport const fetchNftDetail = () => async (dispatch) => {\n\n  dispatch(actions.getNftDetail.request(Canceler.cancel));\n\n  try {\n    const { data } = await Axios.get('/mock_data/nft_detail.json', {\n      cancelToken: Canceler.token,\n      params: {}\n    });\n\n    dispatch(actions.getNftDetail.success(data));\n  } catch (err) {\n    dispatch(actions.getNftDetail.failure(err));\n  }\n};\n","import React, { memo, useEffect, useState } from 'react';\nimport styled from \"styled-components\";\n\nconst Outer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  overflow: hidden;\n  border-radius: 8px;\n`;\n\n//react functional component\nconst NewNftCard = ({ nft, className = 'd-item col-lg-3 col-md-6 col-sm-6 col-xs-12 mb-4', height, onImgLoad, metaData }) => {\n    const [score, setScore] = useState(0);\n    useEffect(() => {\n        setScore(Math.round(Math.random()*20)+10);\n        return () => {\n          console.log(\"cleaned up\");\n        };\n      }, [metaData]);\n\n    return (\n        <div className={className}>\n            <div className=\"nft__item m-0\">\n                \n                <div className=\"author_list_pp\">\n                    \n                </div>\n                <div className=\"nft__item_wrap\" style={{height: `${height}px`}}>\n                <Outer>\n                    <span>\n                        <img key = {metaData} onLoad={onImgLoad} src={metaData ? `https://gateway.pinata.cloud/ipfs/${metaData.image.slice(7)}` : \"\"} className=\"lazy nft__item_preview\" alt=\"\"/>\n                    </span>\n                </Outer>\n                </div>\n                \n                <div className=\"nft__item_info\">\n                    <span>\n                        <a href={nft ? `https://gateway.pinata.cloud/ipfs/${nft.slice(7)}`: \"\"} target= \"_blank\"><h4>{metaData ? `${metaData.name.slice(0,-34)}...${metaData.name.slice(-4)}` : \"\"}</h4></a>\n                    </span>\n                    <div className=\"nft__item_price\">\n                        <span>Score: {metaData ?  metaData.attributes.score : \"\"}</span><span>Rating: {metaData ? metaData.attributes.rating : \"\"}</span><span>Avg: {metaData ? metaData.attributes.average : \"\"}</span>\n                    </div>\n                    \n                    <div className=\"nft__item_like\" style={{paddingTop: \"0.75em\"}}>\n                        <i className=\"fa fa-heart\"></i><span>{score}</span>\n                    </div>                            \n                </div> \n            </div>\n        </div>             \n    );\n};\n\nexport default NewNftCard;","import React, { memo } from 'react';\nimport styled from \"styled-components\";\n\nconst Outer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  overflow: hidden;\n  border-radius: 8px;\n`;\n\n//react functional component\nconst NftCard = ({ nft, className = 'd-item col-lg-3 col-md-6 col-sm-6 col-xs-12 mb-4', clockTop = true, height, onImgLoad }) => {\n\n    return (\n        <div className={className}>\n            <div className=\"nft__item m-0\">\n                \n                <div className=\"author_list_pp\">\n                    <span onClick={()=> window.open(nft.authorLink, \"_self\")}>                                    \n                        <img className=\"lazy\" src={nft.authorImg} alt=\"\"/>\n                        <i className=\"fa fa-check\"></i>\n                    </span>\n                </div>\n                <div className=\"nft__item_wrap\" style={{height: `${height}px`}}>\n                <Outer>\n                    <span>\n                        <img onLoad={onImgLoad} src={nft.previewImg} className=\"lazy nft__item_preview\" alt=\"\"/>\n                    </span>\n                </Outer>\n                </div>\n                \n                <div className=\"nft__item_info\">\n                    <span onClick={()=> window.open(nft.nftLink, \"_self\")}>\n                        <h4>{nft.title}</h4>\n                    </span>\n                    <div className=\"nft__item_price\">\n                        {nft.price}<span>{nft.bid}</span>\n                    </div>\n                    <div className=\"nft__item_action\">\n                        <span onClick={()=> window.open(nft.bidLink, \"_self\")}>Text Placeholder</span>\n                    </div>\n                    <div className=\"nft__item_like\">\n                        <i className=\"fa fa-heart\"></i><span>{nft.likes}</span>\n                    </div>                            \n                </div> \n            </div>\n        </div>             \n    );\n};\n\nexport default memo(NftCard);","\nexport const initEntityState = (initialValue, loading = true) => ({\n    loading,\n    data: initialValue,\n    loadFailed: false,\n    canceler: null\n  });\n  \n  export const entityLoadingStarted = (state, canceler) => ({\n    ...state,\n    canceler,\n    loading: true,\n    loadFailed: false\n  });\n  \n  export const entityLoadingSucceeded = (state, data) => ({\n    ...state,\n    data,\n    loading: false,\n    loadFailed: false,\n    canceler: null\n  });\n  \n  export const entityLoadingFailed = (state) => ({\n    ...state,\n    loading: false,\n    loadFailed: true,\n    canceler: null\n  });\n\n  export const shuffleArray = (array) => {\n    let shuffeled = array;\n\n    for (let i = shuffeled.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [shuffeled[i], shuffeled[j]] = [shuffeled[j], shuffeled[i]];\n    }\n\n    return shuffeled;\n  }","import React, { memo, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as selectors from '../../store/selectors';\r\nimport * as actions from '../../store/actions/thunks';\r\nimport { clearNfts } from '../../store/actions';\r\nimport NftCard from './NftCard';\r\nimport NewNftCard from './NewNftCard';\r\nimport { shuffleArray } from '../../store/utils';\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\n\r\n//react functional component\r\nconst ColumnNewRedux = ({nftList, metaDataList}) => {\r\n    const shuffle = false;\r\n    const dispatch = useDispatch();\r\n    const nftsState = useSelector(selectors.nftBreakdownState);\r\n    const nfts = nftsState.data ? shuffle ? shuffleArray(nftsState.data) : nftsState.data : [];\r\n\r\n    const [height, setHeight] = useState(0);\r\n    const [nftsList, setNftsList] = useState([])\r\n\r\n    const onImgLoad = ({target:img}) => {\r\n        let currentHeight = height;\r\n        if(currentHeight < img.offsetHeight) {\r\n            setHeight(img.offsetHeight);\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        dispatch(actions.fetchNftsBreakdown());\r\n    }, [dispatch]);\r\n\r\n    //will run when component unmounted\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(clearNfts());\r\n        }\r\n    },[dispatch])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n          console.log(\"cleaned up\");\r\n        };\r\n      }, [metaDataList]);\r\n    \r\n\r\n    const loadMore = () => {\r\n        dispatch(actions.fetchNftsBreakdown());\r\n    }\r\n\r\n    return (\r\n        <div key = {nftList.length} className='row'>\r\n            {/*nfts && nfts.map( (nft, index) => (\r\n                <NftCard nft={nft} key={index} onImgLoad={onImgLoad} height={height} />\r\n            ))*/}\r\n            {\r\n              nftList.length>0 && nftList.map( (nft, index) => (\r\n                <NewNftCard nft={nft} key={index} onImgLoad={onImgLoad} height={height} metaData = {metaDataList[index]} />\r\n            ))\r\n            }\r\n        </div>              \r\n    );\r\n};\r\n\r\nexport default ColumnNewRedux;","import React, { useState, useEffect, useContext } from 'react';\nimport { AccountContext } from '../../state/contexts/AccountContext';\n\nimport {\n  useContract,\n  useStarknet,\n  InjectedConnector\n} from '@starknet-react/core'\n\nexport const useArgentX = (props) => {\n  const { globalAccount, setGlobalAccount, globalActive, setGlobalActive } = useContext(AccountContext);\n  const [connected, setConnected] = useState(false);\n   const { account, connect } = useStarknet()\n  // Not sure if we need the active call or not\n  useEffect(() => {\n    if (true) {\n      setGlobalActive(true);\n    }\n    else {\n      setGlobalActive(false);\n    }\n  }, [])\n\n  const connectToArgentX = async () => {\n    console.log(\"in connectToArgentX\")\n    // Check if wallet extension is installed and initialized.\n\n\n    if (connect(new InjectedConnector())) {\n      setGlobalAccount(account)\n      console.log(account, 'account')\n    } else {\n      console.log(\"ARGENTX NOT DETECTED\")\n    }\n  }\n\n  return {\n    globalAccount,\n    setGlobalAccount,\n    connectToArgentX,\n    setGlobalActive,\n    connected,\n    setConnected\n  }\n}\n\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport ColumnNewRedux from '../components/ColumnNewRedux';\r\nimport Footer from '../components/Footer';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { useArgentX } from \"../../state/hooks/useArgentX\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  header#myHeader.navbar.white {\r\n    background: #212428;\r\n  }\r\n`;\r\n\r\nconst Collection = function (props) {\r\n  const [openMenu, setOpenMenu] = React.useState(true);\r\n  const [nftList, setNftList] = useState([]);\r\n  const [metaDataList, setMetaDataList] = useState([]);\r\n\r\n  const argentX = useArgentX();\r\n  console.log(argentX.globalAccount, 'account in collection')\r\n  useEffect(() => {\r\n    const loadUserNFTData = async () => {\r\n      if (argentX.globalAccount) {\r\n        const response = await fetch(`/user-nfts/${argentX.globalAccount}`);\r\n        const body = await response.json();\r\n        const nftList = body.results;\r\n        let metaDataList = Array(nftList.length);\r\n        if (nftList && nftList.length > 0) {\r\n          for (let i = 0; i < nftList.length; i++) {\r\n            const tempMetaData = await fetch(`https://gateway.pinata.cloud/ipfs/${nftList[i].slice(7)}`);\r\n            const metaDataBody = await tempMetaData.json();\r\n            metaDataList[i] = { 'name': metaDataBody.name, 'description': metaDataBody.description, 'image': metaDataBody.image, 'attributes': metaDataBody.attributes }\r\n          }\r\n          setMetaDataList(metaDataList);\r\n          setNftList(nftList);\r\n        }\r\n        else {\r\n          setMetaDataList([]);\r\n          setNftList([]);\r\n        }\r\n      }\r\n      else {\r\n        setNftList([]);\r\n        setMetaDataList([]);\r\n      }\r\n    }\r\n\r\n    loadUserNFTData()\r\n      .catch(console.error);\r\n\r\n  }, [argentX.globalAccount])\r\n\r\n  // Need to update these accounts\r\n  const imageMap = {\r\n    \"0xA072f8Bd3847E21C8EdaAf38D7425631a2A63631\": \"author-1\", \"0x3fd431F425101cCBeB8618A969Ed8AA7DFD115Ca\": \"author-2\",\r\n    \"0x42F9EC8f86B5829123fCB789B1242FacA6E4ef91\": \"author-3\", \"0xa0Bb0815A778542454A26C325a5Ba2301C063b8c\": \"author-4\"\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <GlobalStyles />\r\n\r\n      <section id='profile_banner' className='jumbotron breadcumb no-bg' style={{ backgroundImage: `url(${'./img/background/4.jpg'})` }}>\r\n        <div className='mainbreadcumb'>\r\n        </div>\r\n      </section>\r\n\r\n      <section className='container d_coll no-top no-bottom'>\r\n        <div className='row'>\r\n          <div className=\"col-md-12\">\r\n            <div className=\"d_profile\">\r\n              <div className=\"profile_avatar\">\r\n                <div className=\"d_profile_img\">\r\n                  <img src={`./img/author/${(argentX.globalAccount in imageMap) ? imageMap[argentX.globalAccount] : \"author-5\"}.jpg`} alt=\"\" />\r\n                  <i className=\"fa fa-check\"></i>\r\n                </div>\r\n\r\n                <div className=\"profile_name\">\r\n                  <h4>\r\n                    {argentX.globalAccount && `${argentX.globalAccount.slice(0, 5)}...${argentX.globalAccount.slice(-4)}`}\r\n                    <div className=\"clearfix\"></div>\r\n\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section className='container no-top'>\r\n        {argentX.globalAccount && (\r\n          <div key={argentX.globalAccount} id='zero1' className='onStep fadeIn'>\r\n            <ColumnNewRedux key={argentX.globalAccount} nftList={nftList} metaDataList={metaDataList} />\r\n          </div>\r\n        )}\r\n      </section>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\nexport default Collection;","import React, { memo, useEffect, useState } from 'react';\nimport styled from \"styled-components\";\n\nconst Outer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  overflow: hidden;\n  border-radius: 8px;\n`;\nconst imageMap = {\"0xA072f8Bd3847E21C8EdaAf38D7425631a2A63631\" : \"author-1\", \"0x3fd431F425101cCBeB8618A969Ed8AA7DFD115Ca\": \"author-2\", \n\"0x42F9EC8f86B5829123fCB789B1242FacA6E4ef91\" : \"author-3\", \"0xa0Bb0815A778542454A26C325a5Ba2301C063b8c\" : \"author-4\"}\n\n//react functional component\nconst NewDaoNftCard = ({ nft, className = 'd-item col-lg-3 col-md-6 col-sm-6 col-xs-12 mb-4', height, onImgLoad, metaData, member}) => {\n    const [score, setScore] = useState(0);\n    useEffect(() => {\n        setScore(Math.round(Math.random()*20)+10);\n        return () => {\n          console.log(\"cleaned up\");\n        };\n      }, [metaData]);\n\n    return (\n        <div className={className}>\n            <div className=\"nft__item m-0\">\n                \n                <div className=\"author_list_pp\">\n                <img className=\"lazy\" src={`./img/author/${(member in imageMap) ? imageMap[member] : \"author-5\"}.jpg`} alt=\"\"/>\n                        <i className=\"fa fa-check\"></i>\n                </div>\n                <div className=\"nft__item_wrap\" style={{height: `${height}px`}}>\n                <Outer>\n                    <span>\n                        <img key = {metaData} onLoad={onImgLoad} src={metaData ? `https://gateway.pinata.cloud/ipfs/${metaData.image.slice(7)}` : \"\"} className=\"lazy nft__item_preview\" alt=\"\"/>\n                    </span>\n                </Outer>\n                </div>\n                \n                <div className=\"nft__item_info\">\n                    <span>\n                        <a href={nft ? `https://gateway.pinata.cloud/ipfs/${nft.slice(7)}`: \"\"} target= \"_blank\"><h4>{metaData ? `${metaData.name.slice(0,-34)}...${metaData.name.slice(-4)}` : \"\"}</h4></a>\n                    </span>\n                    <div className=\"nft__item_price\">\n                        <span>Score: {metaData ?  metaData.attributes.score : \"\"}</span><span>Rating: {metaData ? metaData.attributes.rating : \"\"}</span><span>Avg: {metaData ? metaData.attributes.average : \"\"}</span>\n                    </div>\n                    \n                    <div className=\"nft__item_like\" style={{paddingTop: \"0.75em\"}}>\n                        <i className=\"fa fa-heart\"></i><span>{score}</span>\n                    </div>                            \n                </div> \n            </div>\n        </div>             \n    );\n};\n\nexport default NewDaoNftCard;","import React, { memo, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as selectors from '../../store/selectors';\r\nimport * as actions from '../../store/actions/thunks';\r\nimport { clearNfts } from '../../store/actions';\r\nimport NftCard from './NftCard';\r\nimport NewDaoNftCard from './NewDaoNftCard';\r\nimport { shuffleArray } from '../../store/utils';\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\n\r\n//react functional component\r\nconst ColumnNewThreeColRedux = ({nftList, metaDataList, memberList}) => {\r\n    const shuffle = false;\r\n    const dispatch = useDispatch();\r\n    const nftsState = useSelector(selectors.nftBreakdownState);\r\n    const nfts = nftsState.data ? shuffle ? shuffleArray(nftsState.data) : nftsState.data : [];\r\n\r\n    const [height, setHeight] = useState(0);\r\n    const [nftsList, setNftsList] = useState([])\r\n\r\n    const onImgLoad = ({target:img}) => {\r\n        let currentHeight = height;\r\n        if(currentHeight < img.offsetHeight) {\r\n            setHeight(img.offsetHeight);\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        dispatch(actions.fetchNftsBreakdown());\r\n    }, [dispatch]);\r\n\r\n    //will run when component unmounted\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(clearNfts());\r\n        }\r\n    },[dispatch])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n          console.log(\"cleaned up\");\r\n        };\r\n      }, [metaDataList]);\r\n    \r\n\r\n    const loadMore = () => {\r\n        dispatch(actions.fetchNftsBreakdown());\r\n    }\r\n\r\n    return (\r\n        <div key = {nftList.length} className='row'>\r\n            {\r\n              nftList.length>0 && nftList.map( (nft, index) => (\r\n                <NewDaoNftCard nft={nft} key={index} onImgLoad={onImgLoad} height={height} metaData = {metaDataList[index]} member = {memberList[index]} />\r\n            ))\r\n            }\r\n        </div>              \r\n    );\r\n};\r\n\r\nexport default ColumnNewThreeColRedux;","import React, { useState, useContext, useEffect } from 'react';\r\nimport ColumnNewThreeColRedux from '../components/ColumnNewThreeColRedux';\r\nimport Footer from '../components/Footer';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { useArgentX } from \"../../state/hooks/useArgentX\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  header#myHeader.navbar.white {\r\n    background: #212428;\r\n  }\r\n`;\r\n\r\nconst Holdings = function (props) {\r\n  const [nftList, setNftList] = useState([]);\r\n  const [metaDataList, setMetaDataList] = useState([]);\r\n  const [memberList, setMemberList] = useState([]);\r\n\r\n  const argentX = useArgentX();\r\n\r\n  useEffect(() => {\r\n    const loadUserNFTData = async () => {\r\n      if (argentX.globalAccount) {\r\n        const response = await fetch(`/dao-nfts/${argentX.globalAccount}`);\r\n        const body = await response.json();\r\n        const nftList = body.results;\r\n        let metaDataList = Array(nftList.length);\r\n        const members = body.members;\r\n\r\n        if (nftList && nftList.length > 0) {\r\n          for (let i = 0; i < nftList.length; i++) {\r\n            const tempMetaData = await fetch(`https://gateway.pinata.cloud/ipfs/${nftList[i].slice(7)}`);\r\n            const metaDataBody = await tempMetaData.json();\r\n            metaDataList[i] = { 'name': metaDataBody.name, 'description': metaDataBody.description, 'image': metaDataBody.image, 'attributes': metaDataBody.attributes }\r\n          }\r\n          setMetaDataList(metaDataList);\r\n          setNftList(nftList);\r\n          setMemberList(members);\r\n        }\r\n        else {\r\n          setMetaDataList([]);\r\n          setNftList([]);\r\n          setMemberList([]);\r\n        }\r\n      }\r\n      else {\r\n        setNftList([]);\r\n        setMetaDataList([]);\r\n        setMemberList([]);\r\n      }\r\n    }\r\n\r\n    loadUserNFTData()\r\n      .catch(console.error);\r\n\r\n  }, [argentX.globalAccount])\r\n\r\n  const imageMap = {\r\n    \"0xA072f8Bd3847E21C8EdaAf38D7425631a2A63631\": \"author-1\", \"0x3fd431F425101cCBeB8618A969Ed8AA7DFD115Ca\": \"author-2\",\r\n    \"0x42F9EC8f86B5829123fCB789B1242FacA6E4ef91\": \"author-3\", \"0xa0Bb0815A778542454A26C325a5Ba2301C063b8c\": \"author-4\"\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <GlobalStyles />\r\n      <section id='profile_banner' className='jumbotron breadcumb no-bg' style={{ backgroundImage: `url(${'./img/background/4.jpg'})` }}>\r\n        <div className='mainbreadcumb'>\r\n        </div>\r\n      </section>\r\n\r\n      <section className='container no-top'>\r\n        {argentX.globalAccount && (\r\n          <div key={argentX.globalAccount} id='zero1' className='onStep fadeIn'>\r\n            <ColumnNewThreeColRedux key={argentX.globalAccount} nftList={nftList} metaDataList={metaDataList} memberList={memberList} />\r\n          </div>\r\n        )}\r\n      </section>\r\n\r\n\r\n      <Footer />\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default Holdings;","import React from 'react';\n\nexport default function ProviderComposer({ contexts, children }) {\n  return contexts.reduceRight(\n    (kids, parent) => React.cloneElement(parent, {\n      children: kids,\n    }),\n    children\n  )\n}\n","import React from 'react';\nimport ProviderComposer from './ProviderComposer';\nimport AccountProvider from './contexts/AccountContext';\nexport default function PebbleContextProvider({ children, props }) {\n  return (\n    <ProviderComposer contexts={[\n      <AccountProvider />\n    ]}\n    >\n      {children}\n    </ProviderComposer>\n  );\n}\n","import React, { createContext, useState, useContext } from 'react';\nimport { Router, Location, Redirect } from '@reach/router';\nimport ScrollToTopBtn from './menu/scrollToTop';\nimport Header from './menu/header';\nimport Landing from './pages/Landing';\nimport Mint from './pages/mint';\nimport { createGlobalStyle } from 'styled-components';\nimport Collection from './pages/collection';\nimport Holdings from './pages/holdings';\n\nimport PebbleContextProvider from '../state/PebbleContextProvider';\nimport { StarknetProvider } from '@starknet-react/core';\n\nconst GlobalStyles = createGlobalStyle`\n  :root {\n    scroll-behavior: unset;\n  }\n`;\nexport const ScrollTop = ({ children, location }) => {\n  React.useEffect(() => window.scrollTo(0, 0), [location])\n  return children\n}\n\n\nconst PosedRouter = ({ children }) => (\n  <Location>\n    {({ location }) => (\n      <div id='routerhang'>\n        <div key={location.key}>\n          <Router location={location}>\n            {children}\n          </Router>\n        </div>\n      </div>\n    )}\n  </Location>\n);\n\n\nconst App = () => {\n\n  return (\n    <div className=\"wrapper\">\n      <GlobalStyles />\n      <PebbleContextProvider>\n        <StarknetProvider>\n          <Header />\n          <PosedRouter>\n            <ScrollTop path=\"/\">\n\n              <Landing exact path=\"/\">\n                <Redirect to=\"/landing\" />\n              </Landing>\n\n              <Collection path=\"/profile\" />\n              <Holdings path=\"/holdings\" />\n              <Mint path=\"/mint\" />\n\n            </ScrollTop>\n          </PosedRouter>\n        </StarknetProvider>\n      </PebbleContextProvider>\n      <ScrollToTopBtn />\n\n    </div>\n  );\n}\n\nexport default App;\n","import { getType } from 'typesafe-actions';\nimport * as actions from '../actions';\nimport { initEntityState, entityLoadingStarted, entityLoadingSucceeded, entityLoadingFailed } from '../utils';\n\nexport const defaultState = {\n  nftBreakdown: initEntityState(null),\n  nftDetail: initEntityState(null),\n  nftShowcase: initEntityState(null)\n};\n\nconst states = (state = defaultState, action) => {\n  switch (action.type) {\n    \n    case getType(actions.getNftBreakdown.request):\n      return { ...state, nftBreakdown: entityLoadingStarted(state.nftBreakdown, action.payload) };\n    case getType(actions.getNftBreakdown.success):\n      //append existing data with new data\n      let payload = state.nftBreakdown.data ? [...state.nftBreakdown.data, ...action.payload] : action.payload;\n      return { ...state, nftBreakdown: entityLoadingSucceeded(state.nftBreakdown, payload) };\n    case getType(actions.getNftBreakdown.failure):\n      return { ...state, nftBreakdown: entityLoadingFailed(state.nftBreakdown) };\n    \n    case getType(actions.getNftDetail.request):\n      return { ...state, nftDetail: entityLoadingStarted(state.nftDetail, action.payload) };\n    case getType(actions.getNftDetail.success):\n      return { ...state, nftDetail: entityLoadingSucceeded(state.nftDetail, action.payload) };\n    case getType(actions.getNftDetail.failure):\n      return { ...state, nftDetail: entityLoadingFailed(state.nftDetail) };\n    \n    case getType(actions.getNftShowcase.request):\n      return { ...state, nftShowcase: entityLoadingStarted(state.nftShowcase, action.payload) };\n    case getType(actions.getNftShowcase.success):\n      return { ...state, nftShowcase: entityLoadingSucceeded(state.nftShowcase, action.payload) };\n    case getType(actions.getNftShowcase.failure):\n      return { ...state, nftShowcase: entityLoadingFailed(state.nftShowcase) };\n\n    case getType(actions.clearNfts):\n      return { ...state, nftBreakdown: initEntityState(null)};\n    \n    default:\n      return state;\n  }\n};\n\nexport default states;\n","import { getType } from 'typesafe-actions';\nimport * as actions from '../actions';\nimport { initEntityState, entityLoadingStarted, entityLoadingSucceeded, entityLoadingFailed } from '../utils';\n\nexport const defaultState = {\n  hotCollections: initEntityState(null)\n};\n\nconst states = (state = defaultState, action) => {\n  switch (action.type) {\n    \n    case getType(actions.getHotCollections.request):\n      return { ...state, hotCollections: entityLoadingStarted(state.hotCollections, action.payload) };\n    case getType(actions.getHotCollections.success):\n      return { ...state, hotCollections: entityLoadingSucceeded(state.hotCollections, action.payload) };\n    case getType(actions.getHotCollections.failure):\n      return { ...state, hotCollections: entityLoadingFailed(state.hotCollections) };    \n    default:\n      return state;\n  }\n};\n\nexport default states;\n","import { getType } from 'typesafe-actions';\nimport * as actions from '../actions';\nimport { initEntityState, entityLoadingStarted, entityLoadingSucceeded, entityLoadingFailed } from '../utils';\n\nexport const defaultState = {\n  authorList: initEntityState(null),\n  authorRanking: initEntityState(null),\n};\n\nconst states = (state = defaultState, action) => {\n  switch (action.type) {\n    \n    case getType(actions.getAuthorList.request):\n      return { ...state, authorList: entityLoadingStarted(state.authorList, action.payload) };\n    case getType(actions.getAuthorList.success):\n      return { ...state, authorList: entityLoadingSucceeded(state.authorList, action.payload) };\n    case getType(actions.getAuthorList.failure):\n      return { ...state, authorList: entityLoadingFailed(state.authorList) };\n    \n      case getType(actions.getAuthorRanking.request):\n      return { ...state, authorRanking: entityLoadingStarted(state.authorRanking, action.payload) };\n    case getType(actions.getAuthorRanking.success):\n      return { ...state, authorRanking: entityLoadingSucceeded(state.authorRanking, action.payload) };\n    case getType(actions.getAuthorRanking.failure):\n      return { ...state, authorRanking: entityLoadingFailed(state.authorRanking) };\n\n    default:\n      return state;\n  }\n};\n\nexport default states;\n","import { combineReducers } from 'redux';\nimport nftReducer from './nfts';\nimport hoteCollectionsReducer from './hotCollections';\nimport authorListReducer from './authorList';\n\nexport const rootReducer = combineReducers({\n  NFT: nftReducer,\n  hotCollection: hoteCollectionsReducer,\n  authors: authorListReducer\n});\n\nconst reducers = (state, action) => rootReducer(state, action);\n\nexport default reducers;","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport Web3 from 'web3';\n\nimport \"./assets/animated.css\";\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \nimport '../node_modules/elegant-icons/style.css';\nimport '../node_modules/et-line/style.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.js';\nimport './assets/style.scss';\nimport App from './components/App';\n\nimport { Provider } from 'react-redux'\nimport store from './store';\n\nimport reportWebVitals from './reportWebVitals';\n\nfunction getLibrary(provider) {\n  return new Web3(provider)\n}\n\nReactDOM.render(\n  <Web3ReactProvider getLibrary={getLibrary}>\n  <Provider store={store}>\n\t\t<App />\n\t</Provider>\n  </Web3ReactProvider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}